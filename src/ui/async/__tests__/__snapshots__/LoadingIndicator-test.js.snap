// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should allow to specify different colors 1`] = `
<StyledComponent
  color={
    Object {
      "dark": "#006644",
      "default": "#00875A",
      "light": "#36B37E",
    }
  }
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  position: relative;
  margin: 0 auto;
  width: ",
          [Function],
          "px;
  &:before {
    content: '';
    display: block;
  }

  circular {
    animation: rotate 2s linear infinite;
    height: 100%;
    transform-origin: center center;
    width: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
  }
  
  .path {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
    // animation: dash 1.5s ease-in-out infinite;
    animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
    stroke-linecap: round;
  }
  
  @keyframes rotate {
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes color {
    100%,
    0% {
      stroke: ",
          [Function],
          ";
      /* stroke: ",
          "#0052CC",
          " */
    }
    40% {
      stroke: ",
          [Function],
          ";
      /* stroke: ",
          "#0065FF",
          " */
    }
    66% {
      stroke: ",
          [Function],
          ";
      /* stroke: ",
          "#0052CC",
          " */
    }
    80%,
    90% {
      stroke: ",
          [Function],
          ";
      /* stroke: ",
          "#172B4D",
          " */
    }
  }
  
  @keyframes dash {
    0% {
      stroke-dasharray: 1, 200;
      stroke-dashoffset: 0;
    }
    50% {
      stroke-dasharray: 89, 200;
      stroke-dashoffset: -35px;
    }
    100% {
      stroke-dasharray: 89, 200;
      stroke-dashoffset: -124px;
    }
  }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  size={100}
>
  <svg
    className="circular"
    viewBox="25 25 50 50"
  >
    <circle
      className="path"
      cx="50"
      cy="50"
      fill="none"
      r="20"
      strokeMiterlimit="10"
      strokeWidth="2"
    />
  </svg>
</StyledComponent>
`;

exports[`should have consistent look & feel 1`] = `
<StyledComponent
  color={
    Object {
      "dark": "#172B4D",
      "default": "#0052CC",
      "light": "#0065FF",
    }
  }
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  position: relative;
  margin: 0 auto;
  width: ",
          [Function],
          "px;
  &:before {
    content: '';
    display: block;
  }

  circular {
    animation: rotate 2s linear infinite;
    height: 100%;
    transform-origin: center center;
    width: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
  }
  
  .path {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
    // animation: dash 1.5s ease-in-out infinite;
    animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;
    stroke-linecap: round;
  }
  
  @keyframes rotate {
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes color {
    100%,
    0% {
      stroke: ",
          [Function],
          ";
      /* stroke: ",
          "#0052CC",
          " */
    }
    40% {
      stroke: ",
          [Function],
          ";
      /* stroke: ",
          "#0065FF",
          " */
    }
    66% {
      stroke: ",
          [Function],
          ";
      /* stroke: ",
          "#0052CC",
          " */
    }
    80%,
    90% {
      stroke: ",
          [Function],
          ";
      /* stroke: ",
          "#172B4D",
          " */
    }
  }
  
  @keyframes dash {
    0% {
      stroke-dasharray: 1, 200;
      stroke-dashoffset: 0;
    }
    50% {
      stroke-dasharray: 89, 200;
      stroke-dashoffset: -35px;
    }
    100% {
      stroke-dasharray: 89, 200;
      stroke-dashoffset: -124px;
    }
  }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  size={100}
>
  <svg
    className="circular"
    viewBox="25 25 50 50"
  >
    <circle
      className="path"
      cx="50"
      cy="50"
      fill="none"
      r="20"
      strokeMiterlimit="10"
      strokeWidth="2"
    />
  </svg>
</StyledComponent>
`;
